y
q()
e <- rnorm(100, 0, 1)
y <- 1.5 - 3 * x + e
x<-(1:100)
x
y
y <- 1.5 - 3 * x + e
y
plot(x,y)
x<- rnorm(100)
hist(x)
x<- rnorm(100)
hist(x)
hist(x)
x<- rnorm(100)
hist(x)
x<- rnorm(100)
hist(x)
dev.off()
ls
x<- rnorm(100)
hist(x)
x<- rnorm(100)
hist(x)
dev.set()
hist(x)
hist(x)
x<- rnorm(100)
hist(x)
graphics.off()
hist(x)
x <- rnorm(100)
x
y <- x + rnorm(100)
y
par(las=1)
plot(x,y)
par(las=2)
plot(x,y)
par(las=1)
plot(x,y)
par(las=2)
plot(x,y)
par("lty")
x <- rnorm(100)
y <- x + rnorm(100)
plot(x,y)
x1 <- rnorm(10)
y1 <- rnorm(10)
points(x1, y1, col = "red")
text(haleem)
text("haleem")
text()
lines()
points(x1, y1, text = "haleem")
points(x1, y1, text = haleem)
points(x1, text = haleem)
x
y
plot(x,y)
lines()
lines(x,y)
text(x,y)
pdf(file = "testRplot.pdf")
x1 <- rnorm(100)
hist(x)
dev.off()
dev.copy:
x1 <- rnorm(200)
dev.copy2pdf:
x
dev.copy2pdf:
.
dev.copy2pdf:
testRplot.pdf
dev.copy2pdf:
"testRplot.pdf"
fix(dev.copy)
dev.copy: (abcd)
dev.copy:(abcd)
dev.copy
dev.copy("testRplot.pdf")
x<- dev.copy("testRplot.pdf")
x<- dev.copy(testRplot.pdf)
?dev.copy
dev.copy(device,..., which =dev.next())
dev.copy(device, ..., which =dev.next())
dev.copy(device=x11)
dev.off()
dev.copy(device=pdf)
x1 <- rnorm(200)
y <- x + rnorm(100)
plot(x,y)
dev.off()
library(lattice)
library(nlme)
xyplot(distance ~ age | Subject, data= Orthodont)
xyplot(distance ~ age | Subject, data= Orthodont, type = "b")
fix(y)
plot(0, 0, main = expression(theta == 0),
ylab = expression(hat(gamma) == 0),
xlab = expression(sum(x[i] * y[i], i==1, n)))
x <- rnorm(100)
hist(x,
xlab=expression("The mean (" * bar(x) * ") is " *
sum(x[i]/n,i==1,n)))
par(mfrow = c(2, 2))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.abline()
?axis()
plot(0, 0, main = "theta")
plot(0, 0, main = substitute(theta))
plot(0, 0, main = "theta")
plot(0, 0, main = substitute(theta))
plot(0, 0, main = expression(theta))
plot(0, 0, main = expression("theta")
x
set.seed(1)
?set.seed()
png()
png()
?jpg()
?png()
png()
?hist()
plot(0, 0, main = expression("theta")
d
plot(0, 0, main = expression(theta))
plot(0, 0, main = expression(theta))
plot(0, 0, main = substitute(theta))
plot(0, 0, main = substitute(theta))
plot(0, 0, main = expression(theta))
plot(0, 0, main = "theta")
ls
plot(0, 0, main = "theta")
plot(0, 0, main = substitute(theta))
plot(0, 0, main = expression(theta))
plot(0, 0, main = expression(theta))
plot(0, 0, main = substitute(theta))
set.seed(1)
rpois(5, 2)
plot(0, 0, main = "theta")
plot(0, 0, main = "theta")
outcome[, 11] <- as.numeric(outcome[, 11])
q()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
q()
dataset <- read.csv("http://www.biostat.jhsph.edu/~rpeng/coursera/selfquiz/selfquiz-data.csv")
rstudio::viewData(dataset)
download.file("http://www.biostat.jhsph.edu/~rpeng/coursera/selfquiz/selfquiz-data.csv", "selfquiz-data.csv")
dataset <- read.csv("selfquiz-data.csv")
?col()
col(name)
col(data)
names(dataset)
colnames(dataset)
row.names(dataset)
rownames(dataset)
col.names(dataset)
print(dataset[1:6, ])
?head()
head(dataset, 7)
nrows()
nrows(dataset)
nrow(dataset)
head(dataset, ,153)
n <- nrow(dataset)
print(dataset[(n - 7):n, ])
print(dataset[(n - 5):n, ])
print(dataset[(n - 6 + 1):n, ])
tail(dataset)
miss <- is.na(dataset[, "Ozone"])
sum(miss)
mean(dataset[, "Ozone"], na.rm = TRUE)
m <- numeric(6)
for (i in 1:6) {
m[i] <- mean(dataset[, i], na.rm = TRUE)
}
print(m)
?apply()
s <- apply(dataset, 2, sd, na.rm = TRUE)
print(s)
s <- apply(dataset, 1, sd, na.rm = TRUE)
print(s)
s <- apply(dataset, 3, sd, na.rm = TRUE)
s <- apply(dataset, 2, sd, na.rm = TRUE)
s <- apply(dataset, 3, sd, na.rm = TRUE)
s <- apply(dataset, 2, sd, na.rm = TRUE)
print(s)
?apply()
tapply(dataset$Ozone, dataset$Month, mean, na.rm = TRUE)
?set()
?set.seed()
?sample()
set.seed(1)
dataset[sample(nrow(dataset), 5), ]
dir()
q()
data(warpbreaks)
aovObject <- aov(warpbreaks$breaks ~ warpbreaks$wool+warpbreaks$tension)
summary(aovObject)
fig.width=7, fig.height=6}
data(warpbreaks)
names(warpbreaks)
head(warpbreaks)
lm1 <- lm(warpbreaks$breaks ~ warpbreaks$wool + warpbreaks$tension)
anova(lm1)
log(0.25)
library(glm2)
loadpackage("glm2")
install.packages("glm2)
install.packages("glm2")
install.packages("glm2")
library(glm2)
data(crabs)
names(crabs)
?crabs
plm1 <- glm(crabs$Satellites ~ crabs$Width, family="poisson")
summary(plm1)
exp(0.16405)
plot(crabs$Width, plm1$fitted)
exp(-3.30476+22*0.16405)
data(quine)
data(quine)
data(quine)
library(MASS)
install.packages("MASS")
install.packages("MASS")
data(quine)
library(MASS)
data(quine)
lm2 <- lm(log(Days + 2.5) ~.,data=quine)
step(lm2)
?lm()
?lm
help.search("lm")
args("rnorm")
?rnorm()
X~Bin(10,0.5)
par(mfrow = c(1, 3))
?rpois()
hist(rpois(1000,1))
hist(rpois(1000,10))
hist(rpois(1000,20))
par(mfrow = c(1, 3))
plot(rpois(1000,1))
plot(rpois(1000,10))
plot(rpois(1000,20))
TF1* f1 = new TF1("f1", "(-3)*sqrt(x+1)-1", -10, 10);
TF1* f1 =TF1("f1", "(-3)*sqrt(x+1)-1", -10, 10);
TF <- TF1("f1", "(-3)*sqrt(x+1)-1", -10, 10);
TF <- (-3)*sqrt(x+1)-1", -10, 10);
plot(TF)
plot(TF)
TF = (-3)*sqrt(x+1)-1", -10, 10);
plot(TF)
x = (-3)*sqrt(x+1)-1, -10, 10);
x <- (-3)*sqrt(x+1)-1, -10, 10);
x <- "(-3)*sqrt(x+1)-1, -10, 10)"
plot(x)
plot(x,...)
plot(x)
x <- (-3)*sqrt(x+1)-1, -10, 10)
?is.na
inf()
info()
info(is.na)
Inf - Inf
## gal
gal
available.packages()
a <- available.packages()
head(rownames(a), 3)
install.packages("KernSmooth")
library(Ker )
library(KernSmooth)
find.package("devtools")
find_rtools()
exit()
quit()
if(x > 3) {
y <- 10
} else {    y <- 0}
} else {    y <- 0}
if(x > 3) {
y <- 10
} else {    y <- 0}
if(x > 3) {
y <- 10
} else {    y <- 0}
} else {    y <- 0}
if(x > 3) {    y <- 10} else {    y <- 0}
if(x > 3) {
y <- 10
}
x <- c("a", "b", "c", "d")
for(i in 1:4) {
print(x[i])}
print(x[i])}
exit
quit
exit()
quit()
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
hg19 <- dbConnect(MySQL(),user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query,n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
library(httr)
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg2 = GET("http://httpbin.org/basic-auth/user/passwd",
authenticate("user","passwd"))
pg2
names(pg2)
google = handle("http://google.com")
pg1 = GET(handle=google,path="/")
pg2 = GET(handle=google,path="search")
a <- iris
download.file(a, destfile=iris.dat)
download.file(a, "destfile=iris.dat")
download.file(a, "destfile=iris.dat", mehtod = curl)
download.file(a, "destfile=iris.dat", mehtod = "curl")
download.file(iris, "destfile=iris.dat", mehtod = "curl")
download.file(a, destfile="iris.dat", mehtod = "curl")
download.file(iris, destfile="iris.dat", mehtod = "curl")
download.file(iris, destfile="iris.dat", mehtod = "curl")
download.file(a, destfile="iris.dat", mehtod = "curl")
download.file(a, destfile="iris.csv", mehtod = "curl")
download.file(a, destfile="iris", mehtod = "curl")
View(a)
x <- c(4,2,6,5,1,2,3,4)
x
median(x)
median(3)
2x-3
2x-3
a <-2x-3
a <- 2x-3
v <- c(4, 2, 6, 5, 1, 1, 6, 6)
median(v)
v <- c(4, 2, 6, 5, 1, 7, 3, 8)
median(v)
iris
head(iris)
sum["setosa"]
sum(["setosa"])
names(iris["setosa"])
names(iris)
data = read.table('dataset_374_1.txt')
data = read.table('dataset_317_1-1.txt')
bins = seq(min(data[, 1]), max(data[, 1]), by = (max(data[, 1]) - min(data[, 1])) / 10)
result = hist(data[, 1], breaks = bins)
result$counts
data = read.table('dataset_317_1-3.txt')
bins = seq(min(data[, 1]), max(data[, 1]), by = (max(data[, 1]) - min(data[, 1])) / 10)
result = hist(data[, 1], breaks = bins)
result$counts
data = read.table('dataset_317_1-4.txt')
bins = seq(min(data[, 1]), max(data[, 1]), by = (max(data[, 1]) - min(data[, 1])) / 10)
result = hist(data[, 1], breaks = bins)
result$counts
data = read.table('dataset_317_1.txt')
bins = seq(min(data[, 1]), max(data[, 1]), by = (max(data[, 1]) - min(data[, 1])) / 10)
result = hist(data[, 1], breaks = bins)
result$counts
data = read.table('dataset_317_1.txt', 'rt')
bins = seq(min(data[, 1]), max(data[, 1]), by = (max(data[, 1]) - min(data[, 1])) / 10)
result = hist(data[, 1], breaks = bins)
result$counts
data = read.table('dataset_317_1.txt', 'rt')
data = read.table('dataset_317_1.txt', 'rt')
data = read.table('dataset_317_1.txt')
data = read.table('dataset_374_1.txt', 'rt')
data = read.table('dataset_374_1.txt')
bins = seq(min(data[, 1]), max(data[, 1]), by = (max(data[, 1]) - min(data[, 1])) / 10)
result = hist(data[, 1], breaks = bins)
result$counts
data = read.table('dataset_374_1.txt')
bins = seq(min(data[, 1]), max(data[, 1]), by = (max(data[, 1]) - min(data[, 1])) / 10)
result = hist(data[, 1], breaks = bins)
result$counts
x=c(1,0,1,1,0,0)
y=c(0,1,0,0,1,1)
cor(x,y)
cor(x,y= 0.6)
cor(x,y= "0.6")
?lm
sd=0.8
{sd=0.8
{sd(Y=2)
{sd(X=4)
cor(x,y=0.8)
{sd(Y=2)
sd(X=4)
cor(x,y=0.8)
Slo
regl(sd)
}
sd(Y=2)
Y <- 2
X <- 4
lm(X,Y)
lm(X~Y)
rho <- cor(x,y)
rho <- cor(X,Y)
cor(Y)
rho
y=ax+b
y=a*x+b
y <- a *
y <- a*x + b
x <- c(1,1,1,0,0,1)
y <- c(0,0,0,1,1,0)
cor(x,y)
x <- c(1,0,0,1,0,1)
y <- c(0,1,1,0,1,0)
cor(x,y)
x <- c(1,1,1,0,0,1)
y <- c(0,0,0,1,1,0)
cor(x,y)
getwd()
ls
read.table("dataset_389_1.txt")
read.table("dataset_389_1.txt");
head("dataset_389_1.txt")
names("dataset_389_1.txt")
a <- read.table("dataset_389_1.txt")
head(a)
names(a)
View(a)
setwd("Documents/COURSES//42ReproducibleResearch/Week2/Project_1/")
#Reproducible Research: Peer Assessment 1
========================================================
## Loading and preprocessing the data
```{r}
amd <-read.csv(file="activity.csv", sep=",", head=T,colClasses=c("integer","Date","integer"))
```
## What is mean total number of steps taken per day?
```{r}
steps_per_day <- sapply(split(amd$steps, amd$date),sum, na.rm=T)
hist(steps_per_day)
steps_per_day_mean <- mean(steps_per_day)
steps_per_day_median <- median(steps_per_day)
```
## What is the average daily activity pattern?
```{r}
avg_per_int <- (sapply(split(amd$steps, amd$interval), mean, na.rm=T))
int <- (unique(amd$interval))
plot(x=int, y=avg_per_int, type='l', xlab='5-minute interval', ylab='average number of step')
per_int<-sapply(split(amd$steps,amd$interval),sum,na.rm=T)
int_max <- which.max(per_int)
max_step <- int[int_max]
```
## Imputing missing values
```{r}
nrow(na.omit(amd))
sum(is.na(amd))
for(i in 1:nrow(new_data)){
if(is.na(new_data$steps[i])){
new_data[i,]$steps <- avg_per_int[(i %% 150) + 1]
}
}
t_steps_day <- sapply(split(new_data$steps,new_data$date),sum,na.rm=T)
hist(t_steps_day)
new_mean <- mean(t_steps_day)
new_median <- median(t_steps_day
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
ew_data$day=ifelse(as.POSIXlt(as.Date(new_data$date))$wday%%6==0, "weekend","weekday")
new_data$day=factor(new_data$day,levels=c("weekday","weekend"))
s_int=aggregate(steps~interval+day,new_data,mean)
library(lattice)
xyplot(steps~interval|factor(day),data=s_int,aspect=1/2,type="l")
```
source('~/.active-rstudio-document', echo=TRUE)
